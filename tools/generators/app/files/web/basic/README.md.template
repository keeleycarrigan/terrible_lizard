# <%= className %>

<% if (framework) { %>A <%= framework %> web application<% } else { %>A basic web application<% } %> generated by @terrible-lizard/generators.

## Description

<%= className %> is a web application built with:
<% if (framework) { %>- **Framework:** <%= framework %><% } else { %>- **Framework:** Basic HTML/CSS/JavaScript<% } %>
- **Build System:** Nx
- **Dev Server:** serve (Node.js)
<% if (docker) { %>- **Docker:** Enabled<% } %>
- **Generated by:** @terrible-lizard/generators

## Getting Started

### Prerequisites

- Node.js (v24 or higher)
- pnpm
<% if (docker) { %>- Docker (optional, for containerized development)<% } %>

### Development

```bash
# Serve the application
nx serve <%= projectName %>

# Build the application
nx build <%= projectName %>

# Lint the application
nx lint <%= projectName %>

# Test the application
nx test <%= projectName %>
```

<% if (docker) { %>### Docker Development

```bash
# Build the Docker image
nx docker-build <%= projectName %>

# Run with Docker Compose
docker-compose up

# Run just the container
nx docker-run <%= projectName %>
```
<% } %>

## Project Structure

```
<%= projectRoot %>/
├── src/
<% if (framework) { %>│   ├── app/              # Application components
│   ├── assets/           # Static assets
│   └── environments/     # Environment configs<% } else { %>│   ├── index.html        # Main HTML file
│   ├── styles.css        # Stylesheet
│   └── main.js           # JavaScript logic<% } %>
<% if (docker) { %>├── Dockerfile          # Docker configuration
├── docker-compose.yml   # Docker Compose setup
├── nginx.conf           # Nginx configuration<% } %>
└── project.json         # Nx project configuration
```

## Available Commands

| Command | Description |
|---------|-------------|
| `nx serve <%= projectName %>` | Start development server |
| `nx build <%= projectName %>` | Build for production |
| `nx lint <%= projectName %>` | Run linting |
| `nx test <%= projectName %>` | Run tests |
<% if (docker) { %>| `nx docker-build <%= projectName %>` | Build Docker image |
| `nx docker-run <%= projectName %>` | Run Docker container |<% } %>

## Development Guidelines

1. **Code Style**: Follow the project's ESLint configuration
2. **Testing**: Write tests for new features and components
3. **Commits**: Use conventional commit messages
4. **Performance**: Optimize for Core Web Vitals

<% if (framework === 'react') { %>## React-Specific Guidelines

- Use functional components with hooks
- Follow the established folder structure
- Use TypeScript for type safety
- Implement proper error boundaries
<% } %>

<% if (framework === 'angular') { %>## Angular-Specific Guidelines

- Follow Angular style guide
- Use Angular CLI commands through Nx
- Implement proper service patterns
- Use reactive forms where appropriate
<% } %>

<% if (framework === 'nextjs') { %>## Next.js-Specific Guidelines

- Use App Router for new features
- Optimize images with next/image
- Implement proper SEO meta tags
- Use server components where possible
<% } %>

<% if (framework === 'nestjs') { %>## NestJS-Specific Guidelines

- Follow NestJS architectural patterns
- Use decorators appropriately
- Implement proper exception handling
- Use dependency injection patterns
<% } %>

## Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Add tests for new functionality
5. Submit a pull request

## License

This project is part of the Terrible Lizard monorepo.

---

Generated by [@terrible-lizard/generators](../../tools/generators/) • <%= new Date().toISOString().split('T')[0] %>
