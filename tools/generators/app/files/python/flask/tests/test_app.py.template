"""Tests for the main Flask application."""

import pytest
from src.app import create_app
from src.config import TestingConfig


@pytest.fixture
def app():
    """Create application for testing."""
    app = create_app(TestingConfig)
    return app


@pytest.fixture
def client(app):
    """Create test client."""
    return app.test_client()


@pytest.fixture
def runner(app):
    """Create test runner."""
    return app.test_cli_runner()


class TestMainRoutes:
    """Test main application routes."""

    def test_index_page(self, client):
        """Test the index page loads correctly."""
        response = client.get('/')
        assert response.status_code == 200
        assert b'<%= projectName %>' in response.data
        assert b'Flask application is running' in response.data

    def test_health_endpoint(self, client):
        """Test the health check endpoint."""
        response = client.get('/health')
        assert response.status_code == 200
        data = response.get_json()
        assert data['status'] == 'healthy'
        assert data['app'] == '<%= projectName %>'


class TestAPIRoutes:
    """Test API routes."""

    def test_api_health(self, client):
        """Test API health endpoint."""
        response = client.get('/api/health')
        assert response.status_code == 200
        data = response.get_json()
        assert data['status'] == 'healthy'
        assert data['app'] == '<%= projectName %>'
        assert data['framework'] == 'Flask'

    def test_api_hello_default(self, client):
        """Test API hello endpoint with default name."""
        response = client.get('/api/hello')
        assert response.status_code == 200
        data = response.get_json()
        assert data['message'] == 'Hello, World!'
        assert data['app'] == '<%= projectName %>'

    def test_api_hello_with_name(self, client):
        """Test API hello endpoint with custom name."""
        response = client.get('/api/hello?name=Flask')
        assert response.status_code == 200
        data = response.get_json()
        assert data['message'] == 'Hello, Flask!'
        assert data['app'] == '<%= projectName %>'

    def test_api_echo_post(self, client):
        """Test API echo endpoint with POST data."""
        test_data = {'test': 'data', 'number': 42}
        response = client.post('/api/echo', json=test_data)
        assert response.status_code == 200
        data = response.get_json()
        assert data['echo'] == test_data
        assert data['method'] == 'POST'

    def test_api_echo_empty_post(self, client):
        """Test API echo endpoint with empty POST."""
        response = client.post('/api/echo')
        assert response.status_code == 200
        data = response.get_json()
        assert data['echo'] == {}
        assert data['method'] == 'POST'

    def test_api_not_found(self, client):
        """Test API 404 handler."""
        response = client.get('/api/nonexistent')
        assert response.status_code == 404
        data = response.get_json()
        assert data['error'] == 'Not found'
        assert data['status'] == 404


class TestConfiguration:
    """Test application configuration."""

    def test_testing_config(self, app):
        """Test that testing configuration is loaded."""
        assert app.config['TESTING'] is True
        assert app.config['DEBUG'] is True

    def test_secret_key_exists(self, app):
        """Test that secret key is configured."""
        assert app.config['SECRET_KEY'] is not None
