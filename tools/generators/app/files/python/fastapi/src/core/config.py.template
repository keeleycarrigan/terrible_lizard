"""
Application Configuration

FastAPI configuration using Pydantic Settings for type-safe environment management.
"""

import os
from functools import lru_cache
from typing import List

from pydantic import Field
from pydantic_settings import BaseSettings


class Settings(BaseSettings):
    """Application settings loaded from environment variables."""

    # Application
    APP_NAME: str = "<%= name %>"
    ENVIRONMENT: str = Field(default="development", description="Environment: development, production, test")
    DEBUG: bool = Field(default=True, description="Debug mode")

    # API
    API_PREFIX: str = Field(default="/api", description="API prefix")
    VERSION: str = Field(default="0.1.0", description="API version")

    # Database
    DATABASE_URL: str = Field(
        default="postgresql+asyncpg://postgres:password@localhost:5432/<%= name.replace('-', '_') %>_db",
        description="Database connection URL"
    )

    # Security
    SECRET_KEY: str = Field(default="your-secret-key-change-this-in-production", description="Secret key for JWT")
    ALLOWED_HOSTS: List[str] = Field(default=["localhost", "127.0.0.1", "0.0.0.0"], description="Allowed hosts")
    CORS_ORIGINS: List[str] = Field(
        default=["http://localhost:3000", "http://localhost:8080"],
        description="CORS allowed origins"
    )

    # Logging
    LOG_LEVEL: str = Field(default="INFO", description="Logging level")

    class Config:
        env_file = ".env"
        case_sensitive = True


@lru_cache()
def get_settings() -> Settings:
    """Get cached settings instance."""
    return Settings()
