services:
    # Laravel Application with Nginx
    app:
        build:
            context: .
            dockerfile: Dockerfile
            target: development
        ports:
            - '8004:80' # Laravel port mapping
        volumes:
            - ./docker/php.ini:/usr/local/etc/php/php.ini
        environment:
            APP_ENV: local
            APP_DEBUG: 'true'
            DB_CONNECTION: pgsql
            DB_HOST: db
            DB_PORT: 5432
            DB_DATABASE: <%= fileName %>
            DB_USERNAME: postgres
            DB_PASSWORD: postgres
            REDIS_HOST: redis
            REDIS_PORT: 6379
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped
        networks:
            - app-network

    # PostgreSQL Database
    db:
        image: postgres:15-alpine
        environment:
            POSTGRES_DB: <%= fileName %>
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - '5435:5432' # Map to different port to avoid conflicts
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped
        networks:
            - app-network

    # Redis (for caching/sessions)
    redis:
        image: redis:7-alpine
        ports:
            - '6382:6379' # Map to different port to avoid conflicts
        volumes:
            - redis_data:/data
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped
        networks:
            - app-network

    # PhpMyAdmin (optional - for database management)
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        environment:
            PMA_HOST: db
            PMA_USER: postgres
            PMA_PASSWORD: postgres
        ports:
            - '8081:80'
        depends_on:
            - db
        restart: unless-stopped
        networks:
            - app-network
        profiles:
            - admin

volumes:
    postgres_data:
        driver: local
    redis_data:
        driver: local

networks:
    app-network:
        driver: bridge
